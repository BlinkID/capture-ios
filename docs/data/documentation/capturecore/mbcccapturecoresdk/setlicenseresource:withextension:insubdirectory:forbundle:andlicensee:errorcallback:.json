{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK"]]},"variants":[{"paths":["\/documentation\/capturecore\/mbcccapturecoresdk\/setlicenseresource:withextension:insubdirectory:forbundle:andlicensee:errorcallback:"],"traits":[{"interfaceLanguage":"occ"}]}],"abstract":[{"type":"text","text":"Set the license file and unlock the SDK. Also define licensee that will be used to validate the license."},{"text":" ","type":"text"},{"text":"This method can be used to unlock the SDK in library mode, i.e. when Microblink SDK is being","type":"text"},{"text":" ","type":"text"},{"text":"packaged inside 3rd party SDK. Unlocking Microblink SDK in library mode allows usage of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"single license within multiple application packages."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"text":"setLicenseResource:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NSString","preciseIdentifier":"c:objc(cs)NSString"},{"text":" *) ","kind":"text"},{"text":"fileName","kind":"internalParam"},{"kind":"text","text":" "},{"text":"withExtension:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSString","preciseIdentifier":"c:objc(cs)NSString","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"inSubdirectory:"},{"text":"(","kind":"text"},{"text":"NSString","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSString"},{"text":" *) ","kind":"text"},{"text":"subdirectory","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forBundle:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSBundle","text":"NSBundle"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"bundle"},{"text":" ","kind":"text"},{"text":"andLicensee:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSString","text":"NSString"},{"text":" *) ","kind":"text"},{"text":"licensee","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"errorCallback:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:BFv(#$@E@MBCCLicenseError)","text":"void (^)(enum MBCCLicenseError)"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"errorCallback"},{"text":";","kind":"text"}],"languages":["occ"]}]}],"metadata":{"role":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:"}],"modules":[{"name":"CaptureCore"}],"navigatorTitle":[{"kind":"identifier","text":"setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:"}],"externalID":"c:objc(cs)MBCCCaptureCoreSDK(im)setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:","symbolKind":"method","title":"setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK\/setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:"},"references":{"doc://com.microblink.CaptureCore/documentation/CaptureCore":{"identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore","type":"topic","title":"CaptureCore","kind":"symbol","url":"\/documentation\/capturecore","abstract":[],"role":"collection"},"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCCaptureCoreSDK/setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:":{"kind":"symbol","url":"\/documentation\/capturecore\/mbcccapturecoresdk\/setlicenseresource:withextension:insubdirectory:forbundle:andlicensee:errorcallback:","title":"setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:","fragments":[{"text":"- ","kind":"text"},{"text":"setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:","kind":"identifier"}],"navigatorTitle":[{"text":"setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:","kind":"identifier"}],"abstract":[{"type":"text","text":"Set the license file and unlock the SDK. Also define licensee that will be used to validate the license."},{"type":"text","text":" "},{"type":"text","text":"This method can be used to unlock the SDK in library mode, i.e. when Microblink SDK is being"},{"type":"text","text":" "},{"text":"packaged inside 3rd party SDK. Unlocking Microblink SDK in library mode allows usage of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"single license within multiple application packages."}],"type":"topic","identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK\/setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:errorCallback:","role":"symbol"},"doc://com.microblink.CaptureCore/documentation/CaptureCore/MBCCCaptureCoreSDK":{"role":"symbol","identifier":"doc:\/\/com.microblink.CaptureCore\/documentation\/CaptureCore\/MBCCCaptureCoreSDK","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"MBCCCaptureCoreSDK"}],"title":"MBCCCaptureCoreSDK","abstract":[{"type":"text","text":"Entry class for Capture SDK - used for setting up license key and to add support for"},{"type":"text","text":" "},{"text":"optimisation of passing data.","type":"text"}],"url":"\/documentation\/capturecore\/mbcccapturecoresdk"}}}